#####################################################################
#	Macros
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 15
mesh_min: 40, 40
mesh_max: 310,310
#fade_start: 0.6
#fade_end: 10.0
probe_count: 5,5
#zero_reference_position: 125, 110
#algorithm: bicubic
#relative_reference_index: 12

[gcode_macro G32]
gcode:
    STATUS_LEVELING
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    STATUS_READY
    G0 X175 Y175 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(60)|int %}
    {% set hotendtemp = params.EXTRUDER|default(240)|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

    M190 S{bedtemp}                  ; set & wait for bed temp
    G90                              ; set coordinates as absolute
    STATUS_HOMING                    ; set LED status to homing
    G28                              ; home all axes (Original)
    M109 S150                        ; set & wait for hotend temp
    STATUS_HEATING                   ; set LED status to heating
    SILICON_WHIPER                   ; clean nozzle with Silicon Whiper
    G28 Z                            ; home Z only
    QUAD_GANTRY_LEVEL                ; QUAD_GANTRY_LEVEL
    M109 S{hotendtemp}               ; set & wait for hotend temp 
    G92 E0                           ; Reset Extruder
    G1 X12.1 Y20 Z0.28 F5000.0       ; Move to start position
    STATUS_BUSY
    G1 X12.1 Y200.0 Z0.28 F1500.0 E15 ; Draw the first line 
    G1 X12.6 Y200.0 Z0.28 F5000.0     ; Move to side a little
    G1 X12.6 Y20 Z0.28 F1500.0 E30    ; Draw the second line
    G92 E0                            ; Reset Extruder
    G1 Z10 F3000                      ; move nozzle away from bed (Original)

    # enable smart filament sensor
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

#     https://www.teamfdm.com/forums/topic/1115-not-to-g28-or-qgl-every-time-from-start-macro-if-its-already-done/
#     https://github.com/Luc1luc/Voron-2.4-350-Configs/blob/main/macros.cfg

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                            ; wait for buffer to clear
    G92 E0                          ; zero the extruder
    G1 E-5 F1800                    ; retract filament
    G91                             ; relative positioning
    G0 Z10.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    SILICON_WHIPER
    TURN_OFF_HEATERS
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    M107                           ; turn off fan
    G1 Z20 F3000                   ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0 X45 Y315 F3600              ; park nozzle at rear without change of Z
    G0 Z35 F3600                   ; Go down at the end
    M18                            ; disable all steppers
    BED_MESH_CLEAR
    STATUS_READY 
    M220 S100                      ; set speed factor to 100%
    M221 S100                      ; set flow to 100%

[pause_resume]

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
  SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0                                   ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                                  ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1                                   ; enable filament sensor
        #INITIAL_RGB                                                                         ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}          ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                             ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                                  ; relative positioning
        M83                                                                                  ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                        ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                             ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                                  ; restore position
        BASE_RESUME                                                                          ; resume print
    {% endif %}



[gcode_macro CASELight_OFF]
gcode:  SET_PIN PIN=caselight VALUE=0

[gcode_macro CASELight_MIN]
gcode:  SET_PIN PIN=caselight VALUE=0.4

[gcode_macro CASELight_MAX]
gcode:  SET_PIN PIN=caselight VALUE=1

[gcode_macro CENTER]
gcode:
    STATUS_HOMING
    G90
    G0 X175 Y175 Z30 F3600         ; Go to center
    STATUS_READY

##Printer Power Macros

[gcode_macro PRINTER_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro PRINTER_ON]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="on")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    PRINTER_OFF
  {% endif %}

[gcode_shell_command backup_cfg]
command: sh /home/pi/printer_data/config/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro SILICON_WHIPER]
gcode:
  G1 Z10 Y355 X95 F2000;
  G1 Z0.8 F2000
  G1 X165 F9000
  G1 X95 F9000
  G1 X165 F9000
  G1 X95 F9000
  G1 X165 F9000
  G1 X95 F9000
  G1 X165 F9000
  G1 X95 F9000
  G1 X165 F9000
  G1 X95 F9000
  G1 X165 F9000
  G1 Z10 F2000
  G0 X175 Y175 Z10 F3600